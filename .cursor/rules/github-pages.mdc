---
alwaysApply: false
---
# GitHub Pages Deployment Rules for Vite Projects

## Critical Files Required

### .nojekyll File (REQUIRED)
- **Location:** `public/.nojekyll`
- **Purpose:** Prevents GitHub Pages from processing site with Jekyll
- **Why Critical:** Without this file:
  - Assets return 404 errors
  - CSS fails to load
  - JavaScript modules fail with "Failed to resolve module specifier" errors
  - Site appears completely broken
- **Verification:** Must exist in both `public/` and `dist/` after build
- **Creation:** `touch public/.nojekyll`

### CNAME File (Required for Custom Domains)
- **Location:** `public/CNAME`
- **Contents:** Domain name only (e.g., `www.parkandpaint.co.uk`)
- **Purpose:** Tells GitHub Pages which custom domain to use
- **Format:** Single line, no protocol, no trailing slash

## Configuration Requirements

### Vite Config (vite.config.js)
```javascript
{
  base: '/'  // MUST be '/' for custom domains, NOT '/repo-name/'
}
```

### GitHub Repository Settings
- **Pages Source:** GitHub Actions (not Deploy from a branch)
- **Custom Domain:** Set in repository Settings → Pages
- **Enforce HTTPS:** Must be enabled after DNS verification

## Pre-Deployment Checklist

Before every push to main:
1. [ ] Verify `public/.nojekyll` exists
2. [ ] Run `npm run build` successfully
3. [ ] Confirm `dist/.nojekyll` exists after build
4. [ ] Test build locally: `npm run preview`
5. [ ] Check console for no errors
6. [ ] Verify all assets load in preview

## Deployment Verification

After deployment completes:
1. [ ] Clear browser cache (Cmd+Shift+R)
2. [ ] Check browser console - no 404 errors
3. [ ] Verify CSS loads correctly
4. [ ] Test JavaScript functionality
5. [ ] Check responsive design
6. [ ] Test in incognito mode
7. [ ] Verify on multiple devices

## Common Error Patterns

### "Failed to resolve module specifier"
- **Cause:** Missing `.nojekyll` file
- **Solution:** Add `.nojekyll` to `public/`, rebuild, redeploy

### 404 Errors for /images/* or /assets/*
- **Cause:** Either missing `.nojekyll` OR incorrect `base` in vite.config.js
- **Solution:** 
  1. Add `.nojekyll` to `public/`
  2. Verify `base: '/'` in vite.config.js
  3. Rebuild and redeploy

### CSS Not Loading
- **Cause:** Missing `.nojekyll` causes Jekyll to skip CSS files
- **Solution:** Add `.nojekyll`, rebuild, redeploy

### Map (Leaflet) Not Displaying
- **Cause:** JavaScript modules not loading due to Jekyll processing
- **Solution:** Add `.nojekyll`, rebuild, redeploy

## File Structure Verification

Required structure for successful deployment:
```
public/
├── .nojekyll          # ← REQUIRED
├── CNAME              # ← Required for custom domains
├── images/
├── favicon.svg
└── ...other assets

After build, dist/ should contain:
dist/
├── .nojekyll          # ← MUST be copied from public/
├── CNAME              # ← MUST be copied from public/
├── index.html         # ← With bundled asset references
├── assets/
│   ├── index-*.js     # ← Bundled JavaScript
│   ├── index-*.css    # ← Bundled CSS
│   ├── alpine-*.js
│   └── leaflet-*.js
├── images/
└── ...other public assets
```

## Workflow Verification

The `.github/workflows/deploy.yml` must:
1. Run `npm ci` to install dependencies
2. Run `npm run build` to create production build
3. Upload the `dist/` folder (not root or other folders)
4. Deploy to GitHub Pages

## Emergency Rollback

If deployment is broken:
1. Check GitHub Actions logs for errors
2. Verify `.nojekyll` exists in dist/ (download artifact)
3. Revert last commit: `git revert HEAD`
4. Push revert: `git push origin main`
5. Fix locally, verify, redeploy

## Prevention Rules

### For New Projects
1. Create `.nojekyll` file FIRST, before initial deployment
2. Add to version control (not in .gitignore)
3. Verify in `dist/` after first build

### For Existing Projects
1. Audit for `.nojekyll` file monthly
2. Include in pre-deployment checklist
3. Monitor browser console after every deployment

### For Migrations
1. When moving FROM another host TO GitHub Pages:
   - Add `.nojekyll` immediately
   - Test thoroughly before DNS cutover
   - Keep old hosting active during testing

## Related Documentation

- Full troubleshooting: [DEPLOYMENT.md](DEPLOYMENT.md)
- Quick setup: [QUICKSTART.md](QUICKSTART.md)
- GitHub Pages official docs: https://docs.github.com/en/pages

## Last Updated
October 9, 2025

# GitHub Pages Deployment Rules for Vite Projects

## Critical Files Required

### .nojekyll File (REQUIRED)
- **Location:** `public/.nojekyll`
- **Purpose:** Prevents GitHub Pages from processing site with Jekyll
- **Why Critical:** Without this file:
  - Assets return 404 errors
  - CSS fails to load
  - JavaScript modules fail with "Failed to resolve module specifier" errors
  - Site appears completely broken
- **Verification:** Must exist in both `public/` and `dist/` after build
- **Creation:** `touch public/.nojekyll`

### CNAME File (Required for Custom Domains)
- **Location:** `public/CNAME`
- **Contents:** Domain name only (e.g., `www.parkandpaint.co.uk`)
- **Purpose:** Tells GitHub Pages which custom domain to use
- **Format:** Single line, no protocol, no trailing slash

## Configuration Requirements

### Vite Config (vite.config.js)
```javascript
{
  base: '/'  // MUST be '/' for custom domains, NOT '/repo-name/'
}
```

### GitHub Repository Settings
- **Pages Source:** GitHub Actions (not Deploy from a branch)
- **Custom Domain:** Set in repository Settings → Pages
- **Enforce HTTPS:** Must be enabled after DNS verification

## Pre-Deployment Checklist

Before every push to main:
1. [ ] Verify `public/.nojekyll` exists
2. [ ] Run `npm run build` successfully
3. [ ] Confirm `dist/.nojekyll` exists after build
4. [ ] Test build locally: `npm run preview`
5. [ ] Check console for no errors
6. [ ] Verify all assets load in preview

## Deployment Verification

After deployment completes:
1. [ ] Clear browser cache (Cmd+Shift+R)
2. [ ] Check browser console - no 404 errors
3. [ ] Verify CSS loads correctly
4. [ ] Test JavaScript functionality
5. [ ] Check responsive design
6. [ ] Test in incognito mode
7. [ ] Verify on multiple devices

## Common Error Patterns

### "Failed to resolve module specifier"
- **Cause:** Missing `.nojekyll` file
- **Solution:** Add `.nojekyll` to `public/`, rebuild, redeploy

### 404 Errors for /images/* or /assets/*
- **Cause:** Either missing `.nojekyll` OR incorrect `base` in vite.config.js
- **Solution:** 
  1. Add `.nojekyll` to `public/`
  2. Verify `base: '/'` in vite.config.js
  3. Rebuild and redeploy

### CSS Not Loading
- **Cause:** Missing `.nojekyll` causes Jekyll to skip CSS files
- **Solution:** Add `.nojekyll`, rebuild, redeploy

### Map (Leaflet) Not Displaying
- **Cause:** JavaScript modules not loading due to Jekyll processing
- **Solution:** Add `.nojekyll`, rebuild, redeploy

## File Structure Verification

Required structure for successful deployment:
```
public/
├── .nojekyll          # ← REQUIRED
├── CNAME              # ← Required for custom domains
├── images/
├── favicon.svg
└── ...other assets

After build, dist/ should contain:
dist/
├── .nojekyll          # ← MUST be copied from public/
├── CNAME              # ← MUST be copied from public/
├── index.html         # ← With bundled asset references
├── assets/
│   ├── index-*.js     # ← Bundled JavaScript
│   ├── index-*.css    # ← Bundled CSS
│   ├── alpine-*.js
│   └── leaflet-*.js
├── images/
└── ...other public assets
```

## Workflow Verification

The `.github/workflows/deploy.yml` must:
1. Run `npm ci` to install dependencies
2. Run `npm run build` to create production build
3. Upload the `dist/` folder (not root or other folders)
4. Deploy to GitHub Pages

## Emergency Rollback

If deployment is broken:
1. Check GitHub Actions logs for errors
2. Verify `.nojekyll` exists in dist/ (download artifact)
3. Revert last commit: `git revert HEAD`
4. Push revert: `git push origin main`
5. Fix locally, verify, redeploy

## Prevention Rules

### For New Projects
1. Create `.nojekyll` file FIRST, before initial deployment
2. Add to version control (not in .gitignore)
3. Verify in `dist/` after first build

### For Existing Projects
1. Audit for `.nojekyll` file monthly
2. Include in pre-deployment checklist
3. Monitor browser console after every deployment

### For Migrations
1. When moving FROM another host TO GitHub Pages:
   - Add `.nojekyll` immediately
   - Test thoroughly before DNS cutover
   - Keep old hosting active during testing

## Related Documentation

- Full troubleshooting: [DEPLOYMENT.md](DEPLOYMENT.md)
- Quick setup: [QUICKSTART.md](QUICKSTART.md)
- GitHub Pages official docs: https://docs.github.com/en/pages

## Last Updated
October 9, 2025

